{"filter":false,"title":"notifications_controller_spec.rb","tooltip":"/fit_finder/spec/requests/notifications_controller_spec.rb","undoManager":{"mark":25,"position":25,"stack":[[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["require 'rails_helper'","","RSpec.describe NotificationsController, type: :controller do","  describe 'GET #index' do","    let(:user) { create(:user) }","","    before do","      sign_in user","    end","","    it 'assigns notifications and updates checked status' do","      notification1 = create(:notification, user: user)","      notification2 = create(:notification, user: user)","      notification3 = create(:notification, user: user)","","      get :index","","      expect(assigns(:notifications)).to match_array([notification1, notification2, notification3])","      expect(notification1.reload.checked).to be true","      expect(notification2.reload.checked).to be true","      expect(notification3.reload.checked).to be true","    end","  end","","  describe 'PATCH #update' do","    let(:user) { create(:user) }","    let(:notification) { create(:notification, user: user) }","","    before do","      sign_in user","    end","","    it 'updates the checked status of the notification' do","      patch :update, params: { id: notification.id }","","      expect(notification.reload.checked).to be true","      expect(response).to redirect_to(notifications_path)","    end","  end","end",""],"id":1}],[{"start":{"row":2,"column":56},"end":{"row":2,"column":57},"action":"remove","lines":["r"],"id":2},{"start":{"row":2,"column":55},"end":{"row":2,"column":56},"action":"remove","lines":["e"]},{"start":{"row":2,"column":54},"end":{"row":2,"column":55},"action":"remove","lines":["l"]},{"start":{"row":2,"column":53},"end":{"row":2,"column":54},"action":"remove","lines":["l"]},{"start":{"row":2,"column":52},"end":{"row":2,"column":53},"action":"remove","lines":["o"]},{"start":{"row":2,"column":51},"end":{"row":2,"column":52},"action":"remove","lines":["r"]},{"start":{"row":2,"column":50},"end":{"row":2,"column":51},"action":"remove","lines":["t"]},{"start":{"row":2,"column":49},"end":{"row":2,"column":50},"action":"remove","lines":["n"]},{"start":{"row":2,"column":48},"end":{"row":2,"column":49},"action":"remove","lines":["o"]},{"start":{"row":2,"column":47},"end":{"row":2,"column":48},"action":"remove","lines":["c"]}],[{"start":{"row":2,"column":47},"end":{"row":2,"column":48},"action":"insert","lines":["r"],"id":3},{"start":{"row":2,"column":48},"end":{"row":2,"column":49},"action":"insert","lines":["e"]},{"start":{"row":2,"column":49},"end":{"row":2,"column":50},"action":"insert","lines":["q"]},{"start":{"row":2,"column":50},"end":{"row":2,"column":51},"action":"insert","lines":["u"]},{"start":{"row":2,"column":51},"end":{"row":2,"column":52},"action":"insert","lines":["e"]},{"start":{"row":2,"column":52},"end":{"row":2,"column":53},"action":"insert","lines":["s"]},{"start":{"row":2,"column":53},"end":{"row":2,"column":54},"action":"insert","lines":["t"]}],[{"start":{"row":4,"column":4},"end":{"row":4,"column":32},"action":"remove","lines":["let(:user) { create(:user) }"],"id":4},{"start":{"row":4,"column":4},"end":{"row":7,"column":0},"action":"insert","lines":["let(:user) { create(:user) }","let(:visitor) { create(:user) }","let(:notification) { create(:notification, visitor: visitor, visited: user) }",""]}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["  "],"id":5},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["  "],"id":6},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":2,"column":0},"end":{"row":25,"column":5},"action":"remove","lines":["RSpec.describe NotificationsController, type: :request do","  describe 'GET #index' do","    let(:user) { create(:user) }","    let(:visitor) { create(:user) }","    let(:notification) { create(:notification, visitor: visitor, visited: user) }","","","    before do","      sign_in user","    end","","    it 'assigns notifications and updates checked status' do","      notification1 = create(:notification, user: user)","      notification2 = create(:notification, user: user)","      notification3 = create(:notification, user: user)","","      get :index","","      expect(assigns(:notifications)).to match_array([notification1, notification2, notification3])","      expect(notification1.reload.checked).to be true","      expect(notification2.reload.checked).to be true","      expect(notification3.reload.checked).to be true","    end","  end"],"id":7},{"start":{"row":2,"column":0},"end":{"row":24,"column":5},"action":"insert","lines":["RSpec.describe NotificationsController, type: :request do","  describe 'GET #index' do","    let(:user) { create(:user) }","    let(:visitor) { create(:user) }","    let(:notification) { create(:notification, visitor: visitor, visited: user) }","","    before do","      sign_in user","    end","","    it 'assigns notifications and updates checked status' do","      notification1 = create(:notification, visitor: visitor, visited: user)","      notification2 = create(:notification, visitor: visitor, visited: user)","      notification3 = create(:notification, visitor: visitor, visited: user)","","      get notifications_path","","      expect(assigns(:notifications)).to match_array([notification1, notification2, notification3])","      expect(notification1.reload.checked).to be true","      expect(notification2.reload.checked).to be true","      expect(notification3.reload.checked).to be true","    end","  end"]}],[{"start":{"row":2,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["RSpec.describe NotificationsController, type: :request do","  describe 'GET #index' do","    let(:user) { create(:user) }","    let(:visitor) { create(:user) }","    let(:notification) { create(:notification, visitor: visitor, visited: user) }","","    before do","      sign_in user","    end","","    it 'assigns notifications and updates checked status' do","      notification1 = create(:notification, visitor: visitor, visited: user)","      notification2 = create(:notification, visitor: visitor, visited: user)","      notification3 = create(:notification, visitor: visitor, visited: user)","","      get notifications_path","","      expect(assigns(:notifications)).to match_array([notification1, notification2, notification3])","      expect(notification1.reload.checked).to be true","      expect(notification2.reload.checked).to be true","      expect(notification3.reload.checked).to be true","    end","  end","","  describe 'PATCH #update' do","    let(:user) { create(:user) }","    let(:notification) { create(:notification, user: user) }","","    before do","      sign_in user","    end","","    it 'updates the checked status of the notification' do","      patch :update, params: { id: notification.id }","","      expect(notification.reload.checked).to be true","      expect(response).to redirect_to(notifications_path)","    end","  end","end",""],"id":8},{"start":{"row":2,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["RSpec.describe NotificationsController, type: :request do","  describe 'GET #index' do","    let(:user) { create(:user) }","    let(:visitor) { create(:user) }","    let!(:notification1) { create(:notification, visitor: visitor, visited: user) }","    let!(:notification2) { create(:notification, visitor: visitor, visited: user) }","    let!(:notification3) { create(:notification, visitor: visitor, visited: user) }","","    before do","      sign_in user","    end","","    it 'assigns notifications and updates checked status' do","      get notifications_path","","      expect(assigns(:notifications)).to match_array([notification1, notification2, notification3])","      expect(notification1.reload.checked).to be true","      expect(notification2.reload.checked).to be true","      expect(notification3.reload.checked).to be true","    end","  end","","  describe 'PATCH #update' do","    let(:user) { create(:user) }","    let(:notification) { create(:notification, visitor: user) }","","    before do","      sign_in user","    end","","    it 'updates the checked status of the notification' do","      patch notification_path(notification)","","      expect(notification.reload.checked).to be true","      expect(response).to redirect_to(notifications_path)","    end","  end","end",""]}],[{"start":{"row":6,"column":74},"end":{"row":6,"column":75},"action":"insert","lines":["_"],"id":9},{"start":{"row":6,"column":75},"end":{"row":6,"column":76},"action":"insert","lines":["i"]},{"start":{"row":6,"column":76},"end":{"row":6,"column":77},"action":"insert","lines":["a"]}],[{"start":{"row":6,"column":76},"end":{"row":6,"column":77},"action":"remove","lines":["a"],"id":10}],[{"start":{"row":6,"column":76},"end":{"row":6,"column":77},"action":"insert","lines":["d"],"id":11}],[{"start":{"row":7,"column":74},"end":{"row":7,"column":75},"action":"insert","lines":["_"],"id":12},{"start":{"row":7,"column":75},"end":{"row":7,"column":76},"action":"insert","lines":["i"]},{"start":{"row":7,"column":76},"end":{"row":7,"column":77},"action":"insert","lines":["d"]}],[{"start":{"row":8,"column":74},"end":{"row":8,"column":75},"action":"insert","lines":["_"],"id":13},{"start":{"row":8,"column":75},"end":{"row":8,"column":76},"action":"insert","lines":["i"]},{"start":{"row":8,"column":76},"end":{"row":8,"column":77},"action":"insert","lines":["d"]}],[{"start":{"row":6,"column":83},"end":{"row":6,"column":84},"action":"insert","lines":["_"],"id":14},{"start":{"row":6,"column":84},"end":{"row":6,"column":85},"action":"insert","lines":["o"]}],[{"start":{"row":6,"column":84},"end":{"row":6,"column":85},"action":"remove","lines":["o"],"id":15}],[{"start":{"row":6,"column":84},"end":{"row":6,"column":85},"action":"insert","lines":["i"],"id":16},{"start":{"row":6,"column":85},"end":{"row":6,"column":86},"action":"insert","lines":["d"]}],[{"start":{"row":7,"column":83},"end":{"row":7,"column":84},"action":"insert","lines":["_"],"id":17},{"start":{"row":7,"column":84},"end":{"row":7,"column":85},"action":"insert","lines":["i"]},{"start":{"row":7,"column":85},"end":{"row":7,"column":86},"action":"insert","lines":["d"]}],[{"start":{"row":8,"column":83},"end":{"row":8,"column":84},"action":"insert","lines":["_"],"id":18},{"start":{"row":8,"column":84},"end":{"row":8,"column":85},"action":"insert","lines":["i"]},{"start":{"row":8,"column":85},"end":{"row":8,"column":86},"action":"insert","lines":["d"]}],[{"start":{"row":6,"column":85},"end":{"row":6,"column":86},"action":"remove","lines":["d"],"id":19},{"start":{"row":6,"column":84},"end":{"row":6,"column":85},"action":"remove","lines":["i"]},{"start":{"row":6,"column":83},"end":{"row":6,"column":84},"action":"remove","lines":["_"]}],[{"start":{"row":7,"column":85},"end":{"row":7,"column":86},"action":"remove","lines":["d"],"id":20},{"start":{"row":7,"column":84},"end":{"row":7,"column":85},"action":"remove","lines":["i"]},{"start":{"row":7,"column":83},"end":{"row":7,"column":84},"action":"remove","lines":["_"]}],[{"start":{"row":8,"column":85},"end":{"row":8,"column":86},"action":"remove","lines":["d"],"id":21},{"start":{"row":8,"column":84},"end":{"row":8,"column":85},"action":"remove","lines":["i"]},{"start":{"row":8,"column":83},"end":{"row":8,"column":84},"action":"remove","lines":["_"]}],[{"start":{"row":6,"column":83},"end":{"row":6,"column":84},"action":"insert","lines":["_"],"id":22},{"start":{"row":6,"column":84},"end":{"row":6,"column":85},"action":"insert","lines":["i"]},{"start":{"row":6,"column":85},"end":{"row":6,"column":86},"action":"insert","lines":["d"]}],[{"start":{"row":6,"column":83},"end":{"row":6,"column":84},"action":"remove","lines":["_"],"id":23}],[{"start":{"row":6,"column":83},"end":{"row":6,"column":84},"action":"insert","lines":["."],"id":24}],[{"start":{"row":7,"column":83},"end":{"row":7,"column":84},"action":"insert","lines":["."],"id":25},{"start":{"row":7,"column":84},"end":{"row":7,"column":85},"action":"insert","lines":["i"]},{"start":{"row":7,"column":85},"end":{"row":7,"column":86},"action":"insert","lines":["d"]}],[{"start":{"row":8,"column":83},"end":{"row":8,"column":84},"action":"insert","lines":["."],"id":26},{"start":{"row":8,"column":84},"end":{"row":8,"column":85},"action":"insert","lines":["i"]},{"start":{"row":8,"column":85},"end":{"row":8,"column":86},"action":"insert","lines":["d"]}]]},"ace":{"folds":[],"scrolltop":231.60000000000005,"scrollleft":0,"selection":{"start":{"row":8,"column":86},"end":{"row":8,"column":86},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":15,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1684973635848,"hash":"cbbf735bccd738e947e4c6d5d69e4ff1a681636a"}