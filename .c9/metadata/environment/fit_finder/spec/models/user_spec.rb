{"filter":false,"title":"user_spec.rb","tooltip":"/fit_finder/spec/models/user_spec.rb","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":130,"column":34},"end":{"row":130,"column":35},"action":"insert","lines":[","],"id":1143}],[{"start":{"row":130,"column":35},"end":{"row":130,"column":36},"action":"insert","lines":[" "],"id":1144},{"start":{"row":130,"column":36},"end":{"row":130,"column":37},"action":"insert","lines":["i"]},{"start":{"row":130,"column":37},"end":{"row":130,"column":38},"action":"insert","lines":["s"]},{"start":{"row":130,"column":38},"end":{"row":130,"column":39},"action":"insert","lines":["_"]}],[{"start":{"row":130,"column":39},"end":{"row":130,"column":40},"action":"insert","lines":["d"],"id":1145},{"start":{"row":130,"column":40},"end":{"row":130,"column":41},"action":"insert","lines":["e"]},{"start":{"row":130,"column":41},"end":{"row":130,"column":42},"action":"insert","lines":["l"]},{"start":{"row":130,"column":42},"end":{"row":130,"column":43},"action":"insert","lines":["e"]},{"start":{"row":130,"column":43},"end":{"row":130,"column":44},"action":"insert","lines":["t"]},{"start":{"row":130,"column":44},"end":{"row":130,"column":45},"action":"insert","lines":["e"]},{"start":{"row":130,"column":45},"end":{"row":130,"column":46},"action":"insert","lines":["d"]}],[{"start":{"row":130,"column":46},"end":{"row":130,"column":47},"action":"insert","lines":[":"],"id":1146}],[{"start":{"row":130,"column":47},"end":{"row":130,"column":48},"action":"insert","lines":[" "],"id":1147},{"start":{"row":130,"column":48},"end":{"row":130,"column":49},"action":"insert","lines":["f"]},{"start":{"row":130,"column":49},"end":{"row":130,"column":50},"action":"insert","lines":["a"]},{"start":{"row":130,"column":50},"end":{"row":130,"column":51},"action":"insert","lines":["l"]},{"start":{"row":130,"column":51},"end":{"row":130,"column":52},"action":"insert","lines":["s"]},{"start":{"row":130,"column":52},"end":{"row":130,"column":53},"action":"insert","lines":["e"]}],[{"start":{"row":130,"column":54},"end":{"row":131,"column":0},"action":"insert","lines":["",""],"id":1148},{"start":{"row":131,"column":0},"end":{"row":131,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":131,"column":4},"end":{"row":131,"column":5},"action":"insert","lines":["e"],"id":1149},{"start":{"row":131,"column":5},"end":{"row":131,"column":6},"action":"insert","lines":["x"]},{"start":{"row":131,"column":6},"end":{"row":131,"column":7},"action":"insert","lines":["p"]},{"start":{"row":131,"column":7},"end":{"row":131,"column":8},"action":"insert","lines":["e"]},{"start":{"row":131,"column":8},"end":{"row":131,"column":9},"action":"insert","lines":["c"]},{"start":{"row":131,"column":9},"end":{"row":131,"column":10},"action":"insert","lines":["t"]}],[{"start":{"row":131,"column":10},"end":{"row":131,"column":12},"action":"insert","lines":["()"],"id":1150}],[{"start":{"row":131,"column":11},"end":{"row":131,"column":12},"action":"insert","lines":["u"],"id":1151},{"start":{"row":131,"column":12},"end":{"row":131,"column":13},"action":"insert","lines":["s"]},{"start":{"row":131,"column":13},"end":{"row":131,"column":14},"action":"insert","lines":["e"]},{"start":{"row":131,"column":14},"end":{"row":131,"column":15},"action":"insert","lines":["r"]},{"start":{"row":131,"column":15},"end":{"row":131,"column":16},"action":"insert","lines":["."]},{"start":{"row":131,"column":16},"end":{"row":131,"column":17},"action":"insert","lines":["a"]},{"start":{"row":131,"column":17},"end":{"row":131,"column":18},"action":"insert","lines":["c"]},{"start":{"row":131,"column":18},"end":{"row":131,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":131,"column":19},"end":{"row":131,"column":20},"action":"insert","lines":["i"],"id":1152},{"start":{"row":131,"column":20},"end":{"row":131,"column":21},"action":"insert","lines":["v"]},{"start":{"row":131,"column":21},"end":{"row":131,"column":22},"action":"insert","lines":["e"]},{"start":{"row":131,"column":22},"end":{"row":131,"column":23},"action":"insert","lines":["_"]}],[{"start":{"row":131,"column":23},"end":{"row":131,"column":24},"action":"insert","lines":["f"],"id":1153},{"start":{"row":131,"column":24},"end":{"row":131,"column":25},"action":"insert","lines":["o"]},{"start":{"row":131,"column":25},"end":{"row":131,"column":26},"action":"insert","lines":["r"]},{"start":{"row":131,"column":26},"end":{"row":131,"column":27},"action":"insert","lines":["_"]}],[{"start":{"row":131,"column":27},"end":{"row":131,"column":28},"action":"insert","lines":["a"],"id":1154},{"start":{"row":131,"column":28},"end":{"row":131,"column":29},"action":"insert","lines":["u"]},{"start":{"row":131,"column":29},"end":{"row":131,"column":30},"action":"insert","lines":["t"]},{"start":{"row":131,"column":30},"end":{"row":131,"column":31},"action":"insert","lines":["h"]},{"start":{"row":131,"column":31},"end":{"row":131,"column":32},"action":"insert","lines":["e"]},{"start":{"row":131,"column":32},"end":{"row":131,"column":33},"action":"insert","lines":["n"]}],[{"start":{"row":131,"column":33},"end":{"row":131,"column":34},"action":"insert","lines":["t"],"id":1155},{"start":{"row":131,"column":34},"end":{"row":131,"column":35},"action":"insert","lines":["i"]},{"start":{"row":131,"column":35},"end":{"row":131,"column":36},"action":"insert","lines":["c"]},{"start":{"row":131,"column":36},"end":{"row":131,"column":37},"action":"insert","lines":["a"]},{"start":{"row":131,"column":37},"end":{"row":131,"column":38},"action":"insert","lines":["t"]},{"start":{"row":131,"column":38},"end":{"row":131,"column":39},"action":"insert","lines":["i"]},{"start":{"row":131,"column":39},"end":{"row":131,"column":40},"action":"insert","lines":["o"]},{"start":{"row":131,"column":40},"end":{"row":131,"column":41},"action":"insert","lines":["n"]},{"start":{"row":131,"column":41},"end":{"row":131,"column":42},"action":"insert","lines":["?"]}],[{"start":{"row":131,"column":43},"end":{"row":131,"column":44},"action":"insert","lines":["."],"id":1156},{"start":{"row":131,"column":44},"end":{"row":131,"column":45},"action":"insert","lines":["t"]},{"start":{"row":131,"column":45},"end":{"row":131,"column":46},"action":"insert","lines":["o"]}],[{"start":{"row":131,"column":46},"end":{"row":131,"column":47},"action":"insert","lines":[" "],"id":1157},{"start":{"row":131,"column":47},"end":{"row":131,"column":48},"action":"insert","lines":["b"]},{"start":{"row":131,"column":48},"end":{"row":131,"column":49},"action":"insert","lines":["e"]}],[{"start":{"row":131,"column":49},"end":{"row":131,"column":50},"action":"insert","lines":[" "],"id":1158},{"start":{"row":131,"column":50},"end":{"row":131,"column":51},"action":"insert","lines":["t"]},{"start":{"row":131,"column":51},"end":{"row":131,"column":52},"action":"insert","lines":["r"]},{"start":{"row":131,"column":52},"end":{"row":131,"column":53},"action":"insert","lines":["u"]},{"start":{"row":131,"column":53},"end":{"row":131,"column":54},"action":"insert","lines":["e"]}],[{"start":{"row":131,"column":54},"end":{"row":132,"column":0},"action":"insert","lines":["",""],"id":1159},{"start":{"row":132,"column":0},"end":{"row":132,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":132,"column":4},"end":{"row":132,"column":5},"action":"insert","lines":["e"],"id":1160},{"start":{"row":132,"column":5},"end":{"row":132,"column":6},"action":"insert","lines":["n"]},{"start":{"row":132,"column":6},"end":{"row":132,"column":7},"action":"insert","lines":["d"]},{"start":{"row":132,"column":2},"end":{"row":132,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":132,"column":5},"end":{"row":133,"column":0},"action":"insert","lines":["",""],"id":1161},{"start":{"row":133,"column":0},"end":{"row":133,"column":2},"action":"insert","lines":["  "]},{"start":{"row":133,"column":2},"end":{"row":134,"column":0},"action":"insert","lines":["",""]},{"start":{"row":134,"column":0},"end":{"row":134,"column":2},"action":"insert","lines":["  "]},{"start":{"row":134,"column":2},"end":{"row":134,"column":3},"action":"insert","lines":["i"]},{"start":{"row":134,"column":3},"end":{"row":134,"column":4},"action":"insert","lines":["t"]}],[{"start":{"row":134,"column":4},"end":{"row":134,"column":5},"action":"insert","lines":[" "],"id":1162}],[{"start":{"row":134,"column":5},"end":{"row":134,"column":7},"action":"insert","lines":["''"],"id":1163}],[{"start":{"row":134,"column":6},"end":{"row":134,"column":7},"action":"insert","lines":["r"],"id":1164},{"start":{"row":134,"column":7},"end":{"row":134,"column":8},"action":"insert","lines":["e"]},{"start":{"row":134,"column":8},"end":{"row":134,"column":9},"action":"insert","lines":["t"]},{"start":{"row":134,"column":9},"end":{"row":134,"column":10},"action":"insert","lines":["u"]},{"start":{"row":134,"column":10},"end":{"row":134,"column":11},"action":"insert","lines":["r"]},{"start":{"row":134,"column":11},"end":{"row":134,"column":12},"action":"insert","lines":["n"]},{"start":{"row":134,"column":12},"end":{"row":134,"column":13},"action":"insert","lines":["s"]}],[{"start":{"row":134,"column":13},"end":{"row":134,"column":14},"action":"insert","lines":[" "],"id":1165},{"start":{"row":134,"column":14},"end":{"row":134,"column":15},"action":"insert","lines":["f"]},{"start":{"row":134,"column":15},"end":{"row":134,"column":16},"action":"insert","lines":["a"]},{"start":{"row":134,"column":16},"end":{"row":134,"column":17},"action":"insert","lines":["l"]},{"start":{"row":134,"column":17},"end":{"row":134,"column":18},"action":"insert","lines":["s"]},{"start":{"row":134,"column":18},"end":{"row":134,"column":19},"action":"insert","lines":["e"]}],[{"start":{"row":134,"column":19},"end":{"row":134,"column":20},"action":"insert","lines":[" "],"id":1166},{"start":{"row":134,"column":20},"end":{"row":134,"column":21},"action":"insert","lines":["f"]},{"start":{"row":134,"column":21},"end":{"row":134,"column":22},"action":"insert","lines":["o"]},{"start":{"row":134,"column":22},"end":{"row":134,"column":23},"action":"insert","lines":["r"]}],[{"start":{"row":134,"column":23},"end":{"row":134,"column":24},"action":"insert","lines":[" "],"id":1167},{"start":{"row":134,"column":24},"end":{"row":134,"column":25},"action":"insert","lines":["d"]},{"start":{"row":134,"column":25},"end":{"row":134,"column":26},"action":"insert","lines":["e"]},{"start":{"row":134,"column":26},"end":{"row":134,"column":27},"action":"insert","lines":["l"]},{"start":{"row":134,"column":27},"end":{"row":134,"column":28},"action":"insert","lines":["e"]},{"start":{"row":134,"column":28},"end":{"row":134,"column":29},"action":"insert","lines":["t"]},{"start":{"row":134,"column":29},"end":{"row":134,"column":30},"action":"insert","lines":["e"]},{"start":{"row":134,"column":30},"end":{"row":134,"column":31},"action":"insert","lines":["d"]}],[{"start":{"row":134,"column":31},"end":{"row":134,"column":32},"action":"insert","lines":[" "],"id":1168},{"start":{"row":134,"column":32},"end":{"row":134,"column":33},"action":"insert","lines":["u"]},{"start":{"row":134,"column":33},"end":{"row":134,"column":34},"action":"insert","lines":["s"]},{"start":{"row":134,"column":34},"end":{"row":134,"column":35},"action":"insert","lines":["e"]},{"start":{"row":134,"column":35},"end":{"row":134,"column":36},"action":"insert","lines":["r"]},{"start":{"row":134,"column":36},"end":{"row":134,"column":37},"action":"insert","lines":["s"]}],[{"start":{"row":134,"column":38},"end":{"row":134,"column":39},"action":"insert","lines":[" "],"id":1169},{"start":{"row":134,"column":39},"end":{"row":134,"column":40},"action":"insert","lines":["d"]},{"start":{"row":134,"column":40},"end":{"row":134,"column":41},"action":"insert","lines":["o"]}],[{"start":{"row":134,"column":39},"end":{"row":134,"column":41},"action":"remove","lines":["do"],"id":1170},{"start":{"row":134,"column":39},"end":{"row":136,"column":5},"action":"insert","lines":["do","    ","  end"]}],[{"start":{"row":135,"column":4},"end":{"row":135,"column":5},"action":"insert","lines":["u"],"id":1171},{"start":{"row":135,"column":5},"end":{"row":135,"column":6},"action":"insert","lines":["s"]},{"start":{"row":135,"column":6},"end":{"row":135,"column":7},"action":"insert","lines":["e"]},{"start":{"row":135,"column":7},"end":{"row":135,"column":8},"action":"insert","lines":["r"]}],[{"start":{"row":135,"column":8},"end":{"row":135,"column":9},"action":"insert","lines":[" "],"id":1172},{"start":{"row":135,"column":9},"end":{"row":135,"column":10},"action":"insert","lines":["="]}],[{"start":{"row":135,"column":10},"end":{"row":135,"column":11},"action":"insert","lines":[" "],"id":1173},{"start":{"row":135,"column":11},"end":{"row":135,"column":12},"action":"insert","lines":["F"]},{"start":{"row":135,"column":12},"end":{"row":135,"column":13},"action":"insert","lines":["a"]},{"start":{"row":135,"column":13},"end":{"row":135,"column":14},"action":"insert","lines":["c"]},{"start":{"row":135,"column":14},"end":{"row":135,"column":15},"action":"insert","lines":["t"]},{"start":{"row":135,"column":15},"end":{"row":135,"column":16},"action":"insert","lines":["r"]},{"start":{"row":135,"column":16},"end":{"row":135,"column":17},"action":"insert","lines":["o"]}],[{"start":{"row":135,"column":16},"end":{"row":135,"column":17},"action":"remove","lines":["o"],"id":1174},{"start":{"row":135,"column":15},"end":{"row":135,"column":16},"action":"remove","lines":["r"]}],[{"start":{"row":135,"column":15},"end":{"row":135,"column":16},"action":"insert","lines":["r"],"id":1175}],[{"start":{"row":135,"column":15},"end":{"row":135,"column":16},"action":"remove","lines":["r"],"id":1176}],[{"start":{"row":135,"column":15},"end":{"row":135,"column":16},"action":"insert","lines":["o"],"id":1177},{"start":{"row":135,"column":16},"end":{"row":135,"column":17},"action":"insert","lines":["r"]},{"start":{"row":135,"column":17},"end":{"row":135,"column":18},"action":"insert","lines":["y"]},{"start":{"row":135,"column":18},"end":{"row":135,"column":19},"action":"insert","lines":["B"]},{"start":{"row":135,"column":19},"end":{"row":135,"column":20},"action":"insert","lines":["o"]},{"start":{"row":135,"column":20},"end":{"row":135,"column":21},"action":"insert","lines":["t"]}],[{"start":{"row":135,"column":21},"end":{"row":135,"column":22},"action":"insert","lines":["."],"id":1178},{"start":{"row":135,"column":22},"end":{"row":135,"column":23},"action":"insert","lines":["c"]},{"start":{"row":135,"column":23},"end":{"row":135,"column":24},"action":"insert","lines":["r"]},{"start":{"row":135,"column":24},"end":{"row":135,"column":25},"action":"insert","lines":["e"]},{"start":{"row":135,"column":25},"end":{"row":135,"column":26},"action":"insert","lines":["a"]},{"start":{"row":135,"column":26},"end":{"row":135,"column":27},"action":"insert","lines":["t"]},{"start":{"row":135,"column":27},"end":{"row":135,"column":28},"action":"insert","lines":["e"]}],[{"start":{"row":135,"column":28},"end":{"row":135,"column":30},"action":"insert","lines":["()"],"id":1179}],[{"start":{"row":135,"column":29},"end":{"row":135,"column":30},"action":"insert","lines":[":"],"id":1180},{"start":{"row":135,"column":30},"end":{"row":135,"column":31},"action":"insert","lines":["u"]},{"start":{"row":135,"column":31},"end":{"row":135,"column":32},"action":"insert","lines":["s"]},{"start":{"row":135,"column":32},"end":{"row":135,"column":33},"action":"insert","lines":["e"]},{"start":{"row":135,"column":33},"end":{"row":135,"column":34},"action":"insert","lines":["r"]}],[{"start":{"row":135,"column":34},"end":{"row":135,"column":35},"action":"insert","lines":[","],"id":1181}],[{"start":{"row":135,"column":35},"end":{"row":135,"column":36},"action":"insert","lines":[" "],"id":1182},{"start":{"row":135,"column":36},"end":{"row":135,"column":37},"action":"insert","lines":["i"]},{"start":{"row":135,"column":37},"end":{"row":135,"column":38},"action":"insert","lines":["s"]},{"start":{"row":135,"column":38},"end":{"row":135,"column":39},"action":"insert","lines":["_"]},{"start":{"row":135,"column":39},"end":{"row":135,"column":40},"action":"insert","lines":["d"]},{"start":{"row":135,"column":40},"end":{"row":135,"column":41},"action":"insert","lines":["e"]},{"start":{"row":135,"column":41},"end":{"row":135,"column":42},"action":"insert","lines":["l"]}],[{"start":{"row":135,"column":42},"end":{"row":135,"column":43},"action":"insert","lines":["e"],"id":1183},{"start":{"row":135,"column":43},"end":{"row":135,"column":44},"action":"insert","lines":["t"]},{"start":{"row":135,"column":44},"end":{"row":135,"column":45},"action":"insert","lines":["e"]},{"start":{"row":135,"column":45},"end":{"row":135,"column":46},"action":"insert","lines":["d"]},{"start":{"row":135,"column":46},"end":{"row":135,"column":47},"action":"insert","lines":[":"]}],[{"start":{"row":135,"column":47},"end":{"row":135,"column":48},"action":"insert","lines":[" "],"id":1184},{"start":{"row":135,"column":48},"end":{"row":135,"column":49},"action":"insert","lines":["t"]},{"start":{"row":135,"column":49},"end":{"row":135,"column":50},"action":"insert","lines":["r"]},{"start":{"row":135,"column":50},"end":{"row":135,"column":51},"action":"insert","lines":["u"]},{"start":{"row":135,"column":51},"end":{"row":135,"column":52},"action":"insert","lines":["e"]}],[{"start":{"row":135,"column":53},"end":{"row":136,"column":0},"action":"insert","lines":["",""],"id":1185},{"start":{"row":136,"column":0},"end":{"row":136,"column":4},"action":"insert","lines":["    "]},{"start":{"row":136,"column":4},"end":{"row":136,"column":5},"action":"insert","lines":["e"]},{"start":{"row":136,"column":5},"end":{"row":136,"column":6},"action":"insert","lines":["x"]},{"start":{"row":136,"column":6},"end":{"row":136,"column":7},"action":"insert","lines":["p"]},{"start":{"row":136,"column":7},"end":{"row":136,"column":8},"action":"insert","lines":["e"]},{"start":{"row":136,"column":8},"end":{"row":136,"column":9},"action":"insert","lines":["c"]},{"start":{"row":136,"column":9},"end":{"row":136,"column":10},"action":"insert","lines":["t"]},{"start":{"row":136,"column":10},"end":{"row":136,"column":11},"action":"insert","lines":["_"]}],[{"start":{"row":136,"column":10},"end":{"row":136,"column":11},"action":"remove","lines":["_"],"id":1186}],[{"start":{"row":136,"column":10},"end":{"row":136,"column":12},"action":"insert","lines":["()"],"id":1187}],[{"start":{"row":136,"column":11},"end":{"row":136,"column":12},"action":"insert","lines":["u"],"id":1188},{"start":{"row":136,"column":12},"end":{"row":136,"column":13},"action":"insert","lines":["s"]},{"start":{"row":136,"column":13},"end":{"row":136,"column":14},"action":"insert","lines":["e"]},{"start":{"row":136,"column":14},"end":{"row":136,"column":15},"action":"insert","lines":["r"]},{"start":{"row":136,"column":15},"end":{"row":136,"column":16},"action":"insert","lines":["."]}],[{"start":{"row":136,"column":16},"end":{"row":136,"column":17},"action":"insert","lines":["a"],"id":1189},{"start":{"row":136,"column":17},"end":{"row":136,"column":18},"action":"insert","lines":["c"]},{"start":{"row":136,"column":18},"end":{"row":136,"column":19},"action":"insert","lines":["t"]},{"start":{"row":136,"column":19},"end":{"row":136,"column":20},"action":"insert","lines":["i"]},{"start":{"row":136,"column":20},"end":{"row":136,"column":21},"action":"insert","lines":["v"]},{"start":{"row":136,"column":21},"end":{"row":136,"column":22},"action":"insert","lines":["e"]}],[{"start":{"row":136,"column":22},"end":{"row":136,"column":23},"action":"insert","lines":["_"],"id":1190},{"start":{"row":136,"column":23},"end":{"row":136,"column":24},"action":"insert","lines":["f"]},{"start":{"row":136,"column":24},"end":{"row":136,"column":25},"action":"insert","lines":["o"]},{"start":{"row":136,"column":25},"end":{"row":136,"column":26},"action":"insert","lines":["r"]}],[{"start":{"row":136,"column":26},"end":{"row":136,"column":27},"action":"insert","lines":["_"],"id":1191},{"start":{"row":136,"column":27},"end":{"row":136,"column":28},"action":"insert","lines":["a"]},{"start":{"row":136,"column":28},"end":{"row":136,"column":29},"action":"insert","lines":["u"]},{"start":{"row":136,"column":29},"end":{"row":136,"column":30},"action":"insert","lines":["t"]},{"start":{"row":136,"column":30},"end":{"row":136,"column":31},"action":"insert","lines":["h"]},{"start":{"row":136,"column":31},"end":{"row":136,"column":32},"action":"insert","lines":["e"]}],[{"start":{"row":136,"column":31},"end":{"row":136,"column":32},"action":"remove","lines":["e"],"id":1192}],[{"start":{"row":136,"column":31},"end":{"row":136,"column":32},"action":"insert","lines":["e"],"id":1193},{"start":{"row":136,"column":32},"end":{"row":136,"column":33},"action":"insert","lines":["n"]},{"start":{"row":136,"column":33},"end":{"row":136,"column":34},"action":"insert","lines":["t"]},{"start":{"row":136,"column":34},"end":{"row":136,"column":35},"action":"insert","lines":["i"]},{"start":{"row":136,"column":35},"end":{"row":136,"column":36},"action":"insert","lines":["c"]},{"start":{"row":136,"column":36},"end":{"row":136,"column":37},"action":"insert","lines":["a"]},{"start":{"row":136,"column":37},"end":{"row":136,"column":38},"action":"insert","lines":["t"]},{"start":{"row":136,"column":38},"end":{"row":136,"column":39},"action":"insert","lines":["i"]}],[{"start":{"row":136,"column":39},"end":{"row":136,"column":40},"action":"insert","lines":["o"],"id":1194},{"start":{"row":136,"column":40},"end":{"row":136,"column":41},"action":"insert","lines":["n"]},{"start":{"row":136,"column":41},"end":{"row":136,"column":42},"action":"insert","lines":["?"]}],[{"start":{"row":136,"column":43},"end":{"row":136,"column":44},"action":"insert","lines":["."],"id":1195},{"start":{"row":136,"column":44},"end":{"row":136,"column":45},"action":"insert","lines":["t"]},{"start":{"row":136,"column":45},"end":{"row":136,"column":46},"action":"insert","lines":["o"]}],[{"start":{"row":136,"column":46},"end":{"row":136,"column":47},"action":"insert","lines":[" "],"id":1196},{"start":{"row":136,"column":47},"end":{"row":136,"column":48},"action":"insert","lines":["b"]},{"start":{"row":136,"column":48},"end":{"row":136,"column":49},"action":"insert","lines":["e"]}],[{"start":{"row":136,"column":49},"end":{"row":136,"column":50},"action":"insert","lines":[" "],"id":1197},{"start":{"row":136,"column":50},"end":{"row":136,"column":51},"action":"insert","lines":["f"]},{"start":{"row":136,"column":51},"end":{"row":136,"column":52},"action":"insert","lines":["a"]},{"start":{"row":136,"column":52},"end":{"row":136,"column":53},"action":"insert","lines":["l"]},{"start":{"row":136,"column":53},"end":{"row":136,"column":54},"action":"insert","lines":["s"]},{"start":{"row":136,"column":54},"end":{"row":136,"column":55},"action":"insert","lines":["e"]}],[{"start":{"row":136,"column":55},"end":{"row":137,"column":0},"action":"insert","lines":["",""],"id":1198},{"start":{"row":137,"column":0},"end":{"row":137,"column":4},"action":"insert","lines":["    "]},{"start":{"row":137,"column":4},"end":{"row":137,"column":5},"action":"insert","lines":["e"]},{"start":{"row":137,"column":5},"end":{"row":137,"column":6},"action":"insert","lines":["n"]},{"start":{"row":137,"column":6},"end":{"row":137,"column":7},"action":"insert","lines":["d"]},{"start":{"row":137,"column":2},"end":{"row":137,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":133,"column":0},"end":{"row":133,"column":2},"action":"remove","lines":["  "],"id":1199}],[{"start":{"row":138,"column":0},"end":{"row":138,"column":2},"action":"remove","lines":["  "],"id":1200}],[{"start":{"row":138,"column":3},"end":{"row":139,"column":0},"action":"insert","lines":["",""],"id":1201},{"start":{"row":139,"column":0},"end":{"row":140,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":140,"column":0},"end":{"row":159,"column":0},"action":"insert","lines":["describe '#create_notification_follow!' do","  let(:current_user) { FactoryBot.create(:user) }","  let(:user) { FactoryBot.create(:user) }","","  it 'creates a follow notification if no previous notification exists' do","    user.create_notification_follow!(current_user)","    expect(Notification.count).to eq(1)","    notification = Notification.last","    expect(notification.visitor_id).to eq(current_user.id)","    expect(notification.visited_id).to eq(user.id)","    expect(notification.action).to eq('follow')","  end","","  it 'does not create a follow notification if a previous notification exists' do","    FactoryBot.create(:notification, visitor: current_user, visited: user, action: 'follow')","    user.create_notification_follow!(current_user)","    expect(Notification.count).to eq(1)","  end","end",""],"id":1202}],[{"start":{"row":139,"column":0},"end":{"row":140,"column":0},"action":"insert","lines":["",""],"id":1203}],[{"start":{"row":127,"column":0},"end":{"row":128,"column":0},"action":"insert","lines":["",""],"id":1204}],[{"start":{"row":102,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["",""],"id":1205}],[{"start":{"row":92,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["",""],"id":1206}],[{"start":{"row":64,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["",""],"id":1207}],[{"start":{"row":31,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":1208}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":1209}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":1210}],[{"start":{"row":0,"column":0},"end":{"row":167,"column":0},"action":"remove","lines":["require 'rails_helper'","","","RSpec.describe User, type: :model do","  before do","    @user = FactoryBot.create(:user)","    @other = FactoryBot.create(:user)","end","","","describe \"Associations\" do","  it { should have_many(:user_rooms).dependent(:nullify) }","  it { should have_many(:chats).dependent(:nullify) }","  it { should have_many(:sent_chats).class_name('Chat').with_foreign_key('sender_id').dependent(:nullify) }","  it { should have_many(:recived_chats).class_name('Chat').with_foreign_key('receiver_id').dependent(:nullify) }","  it { should have_many(:save_files).dependent(:destroy) }","  it { should have_many(:saved_chats).through(:saved_files).source(:chat).dependent(:nullify) }","","  it { should have_many(:rooms).through(:user_rooms) }","  it { should have_many(:active_relationships).class_name('RelationShip').with_foreign_key('follower_id').dependent(:destroy) }","  it { should have_many(:following).through(:active_relationships).source(:followed) }","  it { should have_many(:active_notifications).class_name('Notification').with_foreign_key('visiter_id').dependent(:destroy) }","  it { should have_many(:passive_notifications).class_name('Notification').with_foreign_key('visiter_id').dependent(:destroy) }","","","  it { should have_one_attached(:profile_picture) }","  it { should have_many(:posts).dependent(:destroy) }","  it { should have_many(:comments).dependent(:destroy) }","  it { should have_many(:likes).dependent(:destroy) }","  it { should have_many(:liked_posts).through(:likes).source(:post) }","  it { should have_many(:passive_relationships).class_name('RelationShip').with_foreign_key('followed_id').dependent(:destroy) }","  it { should have_many(:followers).through(:passive_relationships).source(:follower) }","end","","","discribe \"Validations\" do","  let(:user) { FactoryBot.build(:user) }","","  it \"is valid with valid attributes\" do","    expect(user).to be_valid","  end","","  it \"is not valid without an email\" do","    user.email = nil","    expect(user).not_to be_valid","  end","","  it \"is not valid with a duplicate email\" do","    FactoryBot.create(:user, email: \"test@exmaple.com\")","    expect(user).not_to be_valid","  end","","  it \"is not valid without a username\" do","    user.username = nil","    expect(user).not_to be_valid","  end","","  it \"is not valid without an introduction\" do","    user.untroduction = nil","    expect(user).not_to be_valid","  end","","  it \"is not valid without a location\" do","    user.location = nil","    expect(user).not_to be_valid","  end","end","","","describe \"#get_profile_picture\" do","  let(:user) { FactoryBot.create(:user) }","","  contecxt \"when profile picture is attached\" do","    it \"returns the processed variant\" dp","     user.profile_picture.attach(io: File.open(Rails.root.join('app', 'assets', 'images', 'default_profile_picture.png')), filename: 'default_profile_picture.png', content_type: 'image/png')","","     result = user.get_profile_picture","","     expect(result).to be_an_instance_of(ActiveStorage::Variant)","     expect(result).to be_processed","   end","","   context \"when profile picture is not attached\" do","     it \"attaches a default profile picture and returns the processed variant\" do","","       result = user.get_profile_picture","","       expect(result).to be_an_instance_of(ActiveStorage::Variant)","       expect(result).to be_processed","","       expect(user.profile_picture).to be_attached","       expect(user.profile_picture.filename).to eq('default_profile_picture.png')","      end","    end","  end","end","","","describe '.guest' do","  it 'create a guest user' do","    user = User.guest","    expect(user.email).to eq('guest@example.com')","    expect(user.username).to eq('Guest')","    expect(user.introduction).to eq('Hello, I am a Guest User')","    expect(user.location).to eq('Anywhere')","  end","end","","","describe '#guest?' do","  it 'returns true if the user is a guest' do","    guest_user = FactoryBot.create(:user, :email: 'guest@example.com')","    regular_user = FactoryBot.create(:user)","","    expect(guest_user.guest?).to be true","    expect(regular_user.guest?).to be false","  end","end","","","describe 'following?' do","  let(:user) { FactoryBot.create(:user) }","  let(:other_user) { FactoryBot.create(:user) }","","  it 'returns true if the user is following the other user' do","    FactoryBot.create(:relationship, :follower: user, followed: other_user)","    expect(user.following?(other_user)).to be true","  end","","  it 'returens false if the user is not following the other user' do","    expect(user.following?(other_user)).to be false","  end","end","","","describe '#active_for_authentication?' do","  it 'returens true for active users' do","    user = FactoryBot.create(:user, is_deleted: false)","    expect(user.active_for_authentication?).to be true","  end","","  it 'returns false for deleted users' do","    user = FactoryBot.create(:user, is_deleted: true)","    expect(user.active_for_authentication?).to be false","  end","end","","","describe '#create_notification_follow!' do","  let(:current_user) { FactoryBot.create(:user) }","  let(:user) { FactoryBot.create(:user) }","","  it 'creates a follow notification if no previous notification exists' do","    user.create_notification_follow!(current_user)","    expect(Notification.count).to eq(1)","    notification = Notification.last","    expect(notification.visitor_id).to eq(current_user.id)","    expect(notification.visited_id).to eq(user.id)","    expect(notification.action).to eq('follow')","  end","","  it 'does not create a follow notification if a previous notification exists' do","    FactoryBot.create(:notification, visitor: current_user, visited: user, action: 'follow')","    user.create_notification_follow!(current_user)","    expect(Notification.count).to eq(1)","  end","end",""],"id":1211},{"start":{"row":0,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["require 'rails_helper'","","RSpec.describe User, type: :model do","  before do","    @user = FactoryBot.create(:user)","    @other = FactoryBot.create(:user)","  end","","  describe \"Associations\" do","    it { should have_many(:user_rooms).dependent(:nullify) }","    it { should have_many(:chats).dependent(:nullify) }","    it { should have_many(:sent_chats).class_name('Chat').with_foreign_key('sender_id').dependent(:nullify) }","    it { should have_many(:recived_chats).class_name('Chat').with_foreign_key('receiver_id').dependent(:nullify) }","    it { should have_many(:save_files).dependent(:destroy) }","    it { should have_many(:saved_chats).through(:save_files).source(:chat).dependent(:nullify) }","","    it { should have_many(:rooms).through(:user_rooms) }","    it { should have_many(:active_relationships).class_name('RelationShip').with_foreign_key('follower_id').dependent(:destroy) }","    it { should have_many(:following).through(:active_relationships).source(:followed) }","    it { should have_many(:active_notifications).class_name('Notification').with_foreign_key('visiter_id').dependent(:destroy) }","    it { should have_many(:passive_notifications).class_name('Notification').with_foreign_key('visiter_id').dependent(:destroy) }","","    it { should have_one_attached(:profile_picture) }","    it { should have_many(:posts).dependent(:destroy) }","    it { should have_many(:comments).dependent(:destroy) }","    it { should have_many(:likes).dependent(:destroy) }","    it { should have_many(:liked_posts).through(:likes).source(:post) }","    it { should have_many(:passive_relationships).class_name('RelationShip').with_foreign_key('followed_id').dependent(:destroy) }","    it { should have_many(:followers).through(:passive_relationships).source(:follower) }","  end","","  describe \"Validations\" do","    let(:test_user) { FactoryBot.build(:user) }","","    it \"is valid with valid attributes\" do","      expect(test_user).to be_valid","    end","","    it \"is not valid without an email\" do","      test_user.email = nil","      expect(test_user).not_to be_valid","    end","","    it \"is not valid with a duplicate email\" do","      FactoryBot.create(:user, email: \"test@example.com\")","      test_user.email = \"test@example.com\"","      expect(test_user).not_to be_valid","    end","","    it \"is not valid without a username\" do","      test_user.username = nil","      expect(test_user).not_to be_valid","    end","","    it \"is not valid without an introduction\" do","      test_user.introduction = nil","      expect(test_user).not_to be_valid","    end","","    it \"is not valid without a location\" do","      test_user.location = nil","      expect(test_user).not_to be_valid","    end","  end","","  describe \"#get_profile_picture\" do","    let(:user_with_picture) { FactoryBot.create(:user) }","","    context \"when profile picture is attached\" do","      it \"returns the processed variant\" do","        user_with_picture.profile_picture.attach(io: File.open(Rails.root.join('app', 'assets', 'images', 'default_profile_picture.png')), filename: 'default_profile_picture.png', content_type: 'image/png')","","        result",""]}],[{"start":{"row":72,"column":7},"end":{"row":72,"column":14},"action":"remove","lines":[" result"],"id":1212},{"start":{"row":72,"column":7},"end":{"row":72,"column":53},"action":"insert","lines":["result = user_with_picture.get_profile_picture"]}],[{"start":{"row":72,"column":7},"end":{"row":72,"column":8},"action":"insert","lines":[" "],"id":1213}],[{"start":{"row":72,"column":54},"end":{"row":73,"column":0},"action":"insert","lines":["",""],"id":1214},{"start":{"row":73,"column":0},"end":{"row":73,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":73,"column":8},"end":{"row":76,"column":7},"action":"insert","lines":["expect(result).to be_an_instance_of(ActiveStorage::Variant)","        expect(result).processed?.to be true","      end","    end"],"id":1215}],[{"start":{"row":76,"column":7},"end":{"row":77,"column":0},"action":"insert","lines":["",""],"id":1216},{"start":{"row":77,"column":0},"end":{"row":77,"column":4},"action":"insert","lines":["    "]},{"start":{"row":77,"column":4},"end":{"row":78,"column":0},"action":"insert","lines":["",""]},{"start":{"row":78,"column":0},"end":{"row":78,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":78,"column":4},"end":{"row":157,"column":3},"action":"insert","lines":["context \"when profile picture is not attached\" do","      it \"attaches a default profile picture and returns the processed variant\" do","        user_with_no_picture = FactoryBot.create(:user)","","        result = user_with_no_picture.get_profile_picture","","        expect(result).to be_an_instance_of(ActiveStorage::Variant)","        expect(result).processed?.to be true","        expect(user_with_no_picture.profile_picture).to be_attached","        expect(user_with_no_picture.profile_picture.filename).to eq('default_profile_picture.png')","      end","    end","  end","","  describe '.guest' do","    it 'creates a guest user' do","      user = User.guest","      expect(user.email).to eq('guest@example.com')","      expect(user.username).to eq('Guest')","      expect(user.introduction).to eq('Hello, I am a Guest User')","      expect(user.location).to eq('Anywhere')","    end","  end","","  describe '#guest?' do","    it 'returns true if the user is a guest' do","      guest_user = FactoryBot.create(:user, email: 'guest@example.com')","      regular_user = FactoryBot.create(:user)","","      expect(guest_user.guest?).to be true","      expect(regular_user.guest?).to be false","    end","  end","","  describe '#following?' do","    let(:user1) { FactoryBot.create(:user) }","    let(:user2) { FactoryBot.create(:user) }","","    it 'returns true if the user is following the other user' do","      FactoryBot.create(:relationship, follower: user1, followed: user2)","      expect(user1.following?(user2)).to be true","    end","","    it 'returns false if the user is not following the other user' do","      expect(user1.following?(user2)).to be false","    end","  end","","  describe '#active_for_authentication?' do","    it 'returns true for active users' do","      active_user = FactoryBot.create(:user, is_deleted: false)","      expect(active_user.active_for_authentication?).to be true","    end","","    it 'returns false for deleted users' do","      deleted_user = FactoryBot.create(:user, is_deleted: true)","      expect(deleted_user.active_for_authentication?).to be false","    end","  end","","  describe '#create_notification_follow!' do","    let(:current_user) { FactoryBot.create(:user) }","    let(:user) { FactoryBot.create(:user) }","","    it 'creates a follow notification if no previous notification exists' do","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","      notification = Notification.last","      expect(notification.visitor_id).to eq(current_user.id)","      expect(notification.visited_id).to eq(user.id)","      expect(notification.action).to eq('follow')","    end","","    it 'does not create a follow notification if a previous notification exists' do","      FactoryBot.create(:notification, visitor: current_user, visited: user, action: 'follow')","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","    end","  end","end"],"id":1217}],[{"start":{"row":138,"column":2},"end":{"row":157,"column":3},"action":"remove","lines":["describe '#create_notification_follow!' do","    let(:current_user) { FactoryBot.create(:user) }","    let(:user) { FactoryBot.create(:user) }","","    it 'creates a follow notification if no previous notification exists' do","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","      notification = Notification.last","      expect(notification.visitor_id).to eq(current_user.id)","      expect(notification.visited_id).to eq(user.id)","      expect(notification.action).to eq('follow')","    end","","    it 'does not create a follow notification if a previous notification exists' do","      FactoryBot.create(:notification, visitor: current_user, visited: user, action: 'follow')","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","    end","  end","end"],"id":1218},{"start":{"row":138,"column":2},"end":{"row":165,"column":0},"action":"insert","lines":["describe '#create_notification_follow!' do","    let(:current_user) { FactoryBot.create(:user) }","    let(:user) { FactoryBot.create(:user) }","","    it 'creates a follow notification if no previous notification exists' do","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","      notification = Notification.last","      expect(notification.visitor_id).to eq(current_user.id)","      expect(notification.visited_id).to eq(user.id)","      expect(notification.action).to eq('follow')","    end","","    it 'does not create a follow notification if a previous notification exists' do","      FactoryBot.create(:notification, visitor: current_user, visited: user, action: 'follow')","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","    end","  end","end","上記の修正を適用することで、likeファクトリの重複定義エラーが解消されるはずです。もし他にもエラーが残っている場合や、他の質問がある場合はお知らせください。","","","","","","",""]}],[{"start":{"row":158,"column":0},"end":{"row":158,"column":79},"action":"remove","lines":["上記の修正を適用することで、likeファクトリの重複定義エラーが解消されるはずです。もし他にもエラーが残っている場合や、他の質問がある場合はお知らせください。"],"id":1219}],[{"start":{"row":138,"column":2},"end":{"row":157,"column":3},"action":"remove","lines":["describe '#create_notification_follow!' do","    let(:current_user) { FactoryBot.create(:user) }","    let(:user) { FactoryBot.create(:user) }","","    it 'creates a follow notification if no previous notification exists' do","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","      notification = Notification.last","      expect(notification.visitor_id).to eq(current_user.id)","      expect(notification.visited_id).to eq(user.id)","      expect(notification.action).to eq('follow')","    end","","    it 'does not create a follow notification if a previous notification exists' do","      FactoryBot.create(:notification, visitor: current_user, visited: user, action: 'follow')","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","    end","  end","end"],"id":1220},{"start":{"row":138,"column":2},"end":{"row":157,"column":3},"action":"insert","lines":["describe '#create_notification_follow!' do","    let(:current_user) { FactoryBot.create(:user) }","    let(:user) { FactoryBot.create(:user) }","","    it 'creates a follow notification if no previous notification exists' do","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","      notification = Notification.last","      expect(notification.visitor_id).to eq(current_user.id)","      expect(notification.visited_id).to eq(user.id)","      expect(notification.action).to eq('follow')","    end","","    it 'does not create a follow notification if a previous notification exists' do","      FactoryBot.create(:notification, visitor: current_user, visited: user, action: 'follow')","      user.create_notification_follow!(current_user)","      expect(Notification.count).to eq(1)","    end","  end","end"]}],[{"start":{"row":77,"column":0},"end":{"row":77,"column":4},"action":"remove","lines":["    "],"id":1221}],[{"start":{"row":13,"column":31},"end":{"row":13,"column":32},"action":"insert","lines":["d"],"id":1222}],[{"start":{"row":12,"column":39},"end":{"row":12,"column":40},"action":"remove","lines":["s"],"id":1223},{"start":{"row":12,"column":38},"end":{"row":12,"column":39},"action":"remove","lines":["t"]},{"start":{"row":12,"column":37},"end":{"row":12,"column":38},"action":"remove","lines":["a"]},{"start":{"row":12,"column":36},"end":{"row":12,"column":37},"action":"remove","lines":["h"]},{"start":{"row":12,"column":35},"end":{"row":12,"column":36},"action":"remove","lines":["c"]},{"start":{"row":12,"column":34},"end":{"row":12,"column":35},"action":"remove","lines":["_"]},{"start":{"row":12,"column":33},"end":{"row":12,"column":34},"action":"remove","lines":["d"]},{"start":{"row":12,"column":32},"end":{"row":12,"column":33},"action":"remove","lines":["e"]},{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"remove","lines":["v"]},{"start":{"row":12,"column":30},"end":{"row":12,"column":31},"action":"remove","lines":["i"]},{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"remove","lines":["c"]},{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"remove","lines":["e"]},{"start":{"row":12,"column":27},"end":{"row":12,"column":28},"action":"remove","lines":["r"]}],[{"start":{"row":12,"column":27},"end":{"row":12,"column":41},"action":"insert","lines":["received_chats"],"id":1224}],[{"start":{"row":14,"column":53},"end":{"row":14,"column":54},"action":"insert","lines":["d"],"id":1225}],[{"start":{"row":19,"column":27},"end":{"row":19,"column":47},"action":"remove","lines":["active_notifications"],"id":1226},{"start":{"row":19,"column":27},"end":{"row":19,"column":47},"action":"insert","lines":["active_notifications"]}],[{"start":{"row":19,"column":99},"end":{"row":19,"column":100},"action":"remove","lines":["e"],"id":1227},{"start":{"row":19,"column":99},"end":{"row":19,"column":100},"action":"insert","lines":["o"]}],[{"start":{"row":20,"column":27},"end":{"row":20,"column":48},"action":"remove","lines":["passive_notifications"],"id":1228},{"start":{"row":20,"column":27},"end":{"row":20,"column":48},"action":"insert","lines":["passive_notifications"]}],[{"start":{"row":20,"column":101},"end":{"row":20,"column":102},"action":"remove","lines":["r"],"id":1229},{"start":{"row":20,"column":101},"end":{"row":20,"column":102},"action":"insert","lines":["d"]}],[{"start":{"row":84,"column":8},"end":{"row":84,"column":67},"action":"remove","lines":["expect(result).to be_an_instance_of(ActiveStorage::Variant)"],"id":1230},{"start":{"row":84,"column":8},"end":{"row":84,"column":122},"action":"insert","lines":["expect(result).to be_an_instance_of(ActiveStorage::Variant).or be_an_instance_of(ActiveStorage::VariantWithRecord)"]}],[{"start":{"row":73,"column":8},"end":{"row":73,"column":67},"action":"remove","lines":["expect(result).to be_an_instance_of(ActiveStorage::Variant)"],"id":1231},{"start":{"row":73,"column":8},"end":{"row":74,"column":0},"action":"insert","lines":["expect(result).to be_an_instance_of(ActiveStorage::Variant).or be_an_instance_of(ActiveStorage::VariantWithRecord)",""]}],[{"start":{"row":73,"column":122},"end":{"row":74,"column":0},"action":"remove","lines":["",""],"id":1232}],[{"start":{"row":85,"column":8},"end":{"row":85,"column":44},"action":"remove","lines":["expect(result).processed?.to be true"],"id":1233},{"start":{"row":85,"column":8},"end":{"row":86,"column":0},"action":"insert","lines":["expect(result).to be_processed if result.is_a?(ActiveStorage::Variant)",""]}],[{"start":{"row":85,"column":78},"end":{"row":86,"column":0},"action":"remove","lines":["",""],"id":1234}],[{"start":{"row":74,"column":8},"end":{"row":74,"column":9},"action":"insert","lines":["#"],"id":1235}],[{"start":{"row":87,"column":69},"end":{"row":87,"column":92},"action":"remove","lines":["default_profile_picture"],"id":1236},{"start":{"row":87,"column":69},"end":{"row":87,"column":70},"action":"insert","lines":["e"]},{"start":{"row":87,"column":70},"end":{"row":87,"column":71},"action":"insert","lines":["x"]},{"start":{"row":87,"column":71},"end":{"row":87,"column":72},"action":"insert","lines":["a"]},{"start":{"row":87,"column":72},"end":{"row":87,"column":73},"action":"insert","lines":["m"]}],[{"start":{"row":87,"column":73},"end":{"row":87,"column":74},"action":"insert","lines":["p"],"id":1237},{"start":{"row":87,"column":74},"end":{"row":87,"column":75},"action":"insert","lines":["l"]},{"start":{"row":87,"column":75},"end":{"row":87,"column":76},"action":"insert","lines":["e"]}],[{"start":{"row":136,"column":5},"end":{"row":137,"column":0},"action":"insert","lines":["",""],"id":1238},{"start":{"row":137,"column":0},"end":{"row":137,"column":2},"action":"insert","lines":["  "]},{"start":{"row":137,"column":2},"end":{"row":138,"column":0},"action":"insert","lines":["",""]},{"start":{"row":138,"column":0},"end":{"row":138,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":138,"column":2},"end":{"row":143,"column":3},"action":"insert","lines":["describe 'FactoryBot' do","  it 'creates a user' do","    user = FactoryBot.create(:user)","    expect(user.id).not_to be_nil","  end","end"],"id":1239}],[{"start":{"row":137,"column":0},"end":{"row":137,"column":2},"action":"remove","lines":["  "],"id":1240}],[{"start":{"row":138,"column":0},"end":{"row":138,"column":2},"action":"insert","lines":["# "],"id":1241},{"start":{"row":139,"column":0},"end":{"row":139,"column":2},"action":"insert","lines":["# "]},{"start":{"row":140,"column":0},"end":{"row":140,"column":2},"action":"insert","lines":["# "]},{"start":{"row":141,"column":0},"end":{"row":141,"column":2},"action":"insert","lines":["# "]},{"start":{"row":142,"column":0},"end":{"row":142,"column":2},"action":"insert","lines":["# "]},{"start":{"row":143,"column":0},"end":{"row":143,"column":2},"action":"insert","lines":["# "]}],[{"start":{"row":138,"column":2},"end":{"row":143,"column":5},"action":"remove","lines":["  describe 'FactoryBot' do","#   it 'creates a user' do","#     user = FactoryBot.create(:user)","#     expect(user.id).not_to be_nil","#   end","# end"],"id":1242},{"start":{"row":138,"column":1},"end":{"row":138,"column":2},"action":"remove","lines":[" "]},{"start":{"row":138,"column":0},"end":{"row":138,"column":1},"action":"remove","lines":["#"]},{"start":{"row":137,"column":0},"end":{"row":138,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":136,"column":5},"end":{"row":137,"column":0},"action":"remove","lines":["",""],"id":1243}]]},"ace":{"folds":[],"scrolltop":2159.5,"scrollleft":0,"selection":{"start":{"row":135,"column":7},"end":{"row":135,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":153,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1684662880628,"hash":"bf20c411c28d1bf335a9a22ea3422dd5af0b62a3"}